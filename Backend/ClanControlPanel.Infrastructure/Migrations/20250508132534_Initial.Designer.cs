// <auto-generated />
using System;
using ClanControlPanel.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClanControlPanel.Infrastructure.Migrations
{
    [DbContext(typeof(ClanControlPanelContext))]
    [Migration("20250508132534_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.ClanMoneyDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("CustomReason")
                        .HasColumnType("text");

                    b.Property<int>("Reason")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmountAfterAction")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ClanMoney");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EquipmentDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventAttendenceDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AbsenceReason")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsExcused")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("WasPresent")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PlayerId");

                    b.ToTable("EventAttendences");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameEventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.ItemDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.PlayerDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SquadId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SquadId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.ScheduleDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.SquadDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameSquad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Squads");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.UserDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EquipmentDb", b =>
                {
                    b.HasOne("ClanControlPanel.Infrastructure.Data.ItemDb", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClanControlPanel.Infrastructure.Data.PlayerDb", "Player")
                        .WithMany("Equipments")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventAttendenceDb", b =>
                {
                    b.HasOne("ClanControlPanel.Infrastructure.Data.EventDb", "Event")
                        .WithMany("Attendences")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClanControlPanel.Infrastructure.Data.PlayerDb", "Player")
                        .WithMany("Attendences")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventDb", b =>
                {
                    b.HasOne("ClanControlPanel.Infrastructure.Data.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.PlayerDb", b =>
                {
                    b.HasOne("ClanControlPanel.Infrastructure.Data.SquadDb", "Squad")
                        .WithMany("Players")
                        .HasForeignKey("SquadId");

                    b.HasOne("ClanControlPanel.Infrastructure.Data.UserDb", "User")
                        .WithOne("Player")
                        .HasForeignKey("ClanControlPanel.Infrastructure.Data.PlayerDb", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.ScheduleDb", b =>
                {
                    b.HasOne("ClanControlPanel.Infrastructure.Data.PlayerDb", "Player")
                        .WithMany("Schedules")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.EventDb", b =>
                {
                    b.Navigation("Attendences");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.PlayerDb", b =>
                {
                    b.Navigation("Attendences");

                    b.Navigation("Equipments");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.SquadDb", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("ClanControlPanel.Infrastructure.Data.UserDb", b =>
                {
                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
